## -*- tcl -*-
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## Test suite for cache stores, custom parts.
#
## The external procedures 'already' and 'badmethod' are used to
## generate implementation specific error messages. Implementations
## have to be provided by the invoking implementation-specific
## testsuite.
#
## The external procedures 'new-store' and 'release-store' are used to
## create and destroy aqn instance of the store under test.

# # ## ### ##### ######## ############# #####################

test atom-cache-1.0 {new, wrong#args, not enough} -body {
    atom::cache new
} -returnCodes error -result {wrong # args: should be "atom::cache new backend"}

test atom-cache-1.1 {new, wrong#args, too many} -body {
    atom::cache new B X
} -returnCodes error -result {wrong # args: should be "atom::cache new backend"}

test atom-cache-1.2 {create, wrong#args, not enough} -body {
    atom::cache create foo
} -returnCodes error -result {wrong # args: should be "atom::cache create foo backend"}

test atom-cache-1.3 {create, wrong#args, too many} -body {
    atom::cache create foo B X
} -returnCodes error -result {wrong # args: should be "atom::cache create foo backend"}

test atom-cache-1.4 {constructor, create, existing command} -setup {
    atom::memory create X
    atom::cache create myacache X
} -body {
    atom::cache create myacache X
} -cleanup {
    myacache destroy
    X destroy
} -returnCodes error -result [already myacache]

test atom-cache-1.6 {constructor, create, existing command} -setup {
    atom::memory create X
} -body {
    atom::cache create set X
} -cleanup {
    X destroy
} -returnCodes error -result [already set]

test atom-cache-1.6 {constructor, create} -setup {
    set result {}
    atom::memory create X
} -body {
    lappend result [atom::cache create myacache X]
    lappend result [info commands ::myacache]
    lappend result [myacache size]
} -cleanup {
    myacache destroy
    X destroy
    unset result
} -result {::myacache ::myacache 0}

test atom-cache-1.7 {constructor, new} -setup {
    set result {}
    atom::memory create X
} -body {
    lappend result [set foo [atom::cache new X]]
    lappend result [info commands ::$foo]
    lappend result [$foo size]
} -cleanup {
    $foo destroy
    X destroy
    unset result foo
} -match glob -result {::oo::Obj* ::oo::Obj* 0}

# # ## ### ##### ######## ############# #####################
return
